{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,OAAQH,SAASC,cAAc,wBAC/BG,OAAQJ,SAASC,cAAc,0BAiBjC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChB,IAAIC,SAAQ,SAACC,EAAKC,GACtCC,YAAW,WACLN,EACFI,EAAI,CAACG,SAAAT,EAAUC,UAEfM,EAAI,CAACE,SAAAT,EAAUC,S,MAGlBA,GAEAS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUG,EAAKD,EAALV,MACjBY,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAN,G,IAAGF,EAAQE,EAARF,SAAUG,EAAKD,EAALV,MAClBY,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANJ,EAAM,M,IA9BzEpB,EAAKM,OAAOqB,iBAAiB,SAE7B,SAAkBC,GAChBA,EAAEC,iBAKF,IAJA,IAAM5B,EAAa6B,OAAO9B,EAAKC,WAAW8B,OACpC1B,EAASyB,OAAO9B,EAAKK,OAAO0B,OAC5BC,EAAOF,OAAO9B,EAAKI,UAAU2B,OAE1BE,EAAI,EAAGA,GAAK5B,EAAQ4B,GAAK,EAAG,CAEnC1B,EAAc0B,EADEhC,EAAc+B,GAAQC,EAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  stepDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  submit: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.submit.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const firstDelay = Number(refs.firstDelay.value);\n  const amount = Number(refs.amount.value);\n  const step = Number(refs.stepDelay.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    let delayMath = firstDelay + (step * (i - 1));\n    createPromise(i, delayMath);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const resultPromise = new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({position, delay});\n      } else {\n        rej({position, delay});\n      }\n    });\n  }, delay);\n  resultPromise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","firstDelay","document","querySelector","stepDelay","amount","submit","$ce04d3a99e08e73b$var$createPromise","position1","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","position","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","Number","value","step","i"],"version":3,"file":"03-promises.c7520626.js.map"}